## @section Kubernetes settings
##
image:
  ## @param image.registry lidarr image registry
  ##
  registry: docker.io
  ## @param image.repository lidarr image repository
  ##
  repository: digrouz/lidarr
  ##
  ## @param image.tag lidarr image tag
  ## Ref: https://hub.docker.com/r/digrouz/lidarr/tags
  ##
  tag: "latest"
  ## @param image.pullPolicy lidarr image pull policy
  ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  pullPolicy: Always
## @param fullnameOverride String to override the application name.
##
fullnameOverride: ""
## @section Service Configuration
##
service:
  ## @param service.uid user id running lidarr
  ##
  uid: 12345
  ## @param service.gid group id running lidarr
  ##
  gid: 12345
  ## @param service.autoupgrade apply OS updates inside container at startup
  ##
  autoupgrade: 0
  ## @param service.tz Time Zone
  ##
  tz: Europe/Brussels
ingress:
  webui:
    ## @param ingress.webui.enabled Enable ingress for lidarr webui
    ##
    enabled: true
    ## @param ingress.webui.ingressClassName Ingress class name for lidarr webui ingress
    ##
    ingressClassName: traefik
    ## @param ingress.webui.host Host for lidarr webui ingress
    ##
    host: ""
    ## @param ingress.webui.tls Enable TLS for lidarr webui ingress
    ##
    tls: true
    ## @param ingress.webui.annotations Annotations for lidarr webui ingress
    ##
    annotations:
      traefik.ingress.kubernetes.io/router.middlewares: [] 
      cert-manager.io/cluster-issuer: letsencrypt-prod
## @section Storage persistence Configuration
##
persistence:
  config:
    ## @param persistence.config.type Type of persistence for lidarr config
    ## If set to pvc, a persistent volume claim will be created
    ## If set to nfs, a network file system will be used
    ##
    type: pvc
    ## Specific persistence options for lidarr config using a persistent volume claim
    ##
    pvc:
      ## @param persistence.config.pvc.storageClass Storage class for lidarr config
      ## If not set, the default storage class will be used
      ##
      storageClass: longhorn
      ## @param persistence.config.pvc.existingClaim Existing persistent volume claim for lidarr config
      ## If set, the config will be stored in the existing persistent volume claim
      ##
      accessMode: ReadWriteOnce
      ## @param persistence.config.pvc.size Size of the persistent volume for lidarr config
      ## If not set, the default size will be used
      ##
      size: 5Gi
    ## Specific persistence options for lidarr config using NFS
    ##      
    nfs:
      ## @param persistence.config.nfs.server NFS server for lidarr config
      ## If not set, the default NFS server will be used
      ##
      server: ""
      ## @param persistence.config.nfs.path NFS path for lidarr config
      ## If not set, the default NFS path will be used
      ##
      path: ""
  downloads:
    ## @param persistence.downloads.type Type of persistence for lidarr downloads
    ## If set to pvc, a persistent volume claim will be created
    ## If set to nfs, a network file system will be used
    ##
    type: pvc
    ## Specific persistence options for lidarr downloads using a persistent volume claim
    ##
    pvc:
      ## @param persistence.downloads.pvc.storageClass Storage class for lidarr downloads
      ## If not set, the default storage class will be used
      ##
      storageClass: longhorn
      ## @param persistence.downloads.pvc.accessMode Access mode for lidarr downloads
      ## If not set, the default access mode will be used
      ##
      accessMode: ReadWriteOnce
      ## @param persistence.downloads.pvc.size Size of the persistent volume for lidarr downloads
      ## If not set, the default size will be used
      ##
      size: 5Gi
    ## Specific persistence options for lidarr downloads using NFS
    ##      
    nfs:
      ## @param persistence.downloads.nfs.server NFS server for lidarr downloads
      ## If not set, the default NFS server will be used
      ##
      server: ""
      ## @param persistence.downloads.nfs.path NFS path for lidarr downloads
      ## If not set, the default NFS path will be used
      ##
      path: ""
  music:
    ## @param persistence.music.type Type of persistence for lidarr music
    ## If set to pvc, a persistent volume claim will be created
    ## If set to nfs, a network file system will be used
    ##
    type: pvc
    ## Specific persistence options for lidarr music using a persistent volume claim
    ##
    pvc:
      ## @param persistence.music.pvc.storageClass Storage class for lidarr music
      ## If not set, the default storage class will be used
      ##
      storageClass: longhorn
      ## @param persistence.music.pvc.accessMode Access mode for lidarr music
      ## If not set, the default access mode will be used
      ##
      accessMode: ReadWriteOnce
      ## @param persistence.music.pvc.size Size of the persistent volume for lidarr music
      ## If not set, the default size will be used
      ##
      size: 5Gi
    ## Specific persistence options for lidarr music using NFS
    ##      
    nfs:
      ## @param persistence.music.nfs.server NFS server for lidarr music
      ## If not set, the default NFS server will be used
      ##
      server: ""
      ## @param persistence.music.nfs.path NFS path for lidarr music
      ## If not set, the default NFS path will be used
      ##
      path: ""
extraObjects: []

