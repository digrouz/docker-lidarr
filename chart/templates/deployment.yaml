---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-lidarr
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/component: lidarr
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: lidarr
  template:
    metadata:
      labels:
        app.kubernetes.io/component: lidarr
    spec:
      containers:
        - name: lidarr
          image: {{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 8686
          volumeMounts:
            - mountPath: /config
              name: lidarr-config
            - mountPath: /downloads
              name: lidarr-downloads
            - mountPath: /music
              name: lidarr-music
          env:
            - name: GID
              value: "{{ .Values.service.gid }}"
            - name: UID
              value: "{{ .Values.service.uid }}"
            - name: TZ
              value: "{{ .Values.service.tz }}"
            - name: AUTOUPGRADE
              value: "{{ .Values.service.autoupgrade }}"
      volumes:
        - name: lidarr-config
          {{- if eq .Values.persistence.config.type "pvc" }}
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-config-pvc
          {{- else if eq .Values.persistence.config.type "nfs" }}
          nfs:
            server: {{ .Values.persistence.config.nfs.server }}
            path: {{ .Values.persistence.config.nfs.path }}
          {{- else }}
          emptyDir: { }
          {{- end }}
        - name: lidarr-downloads
          {{- if eq .Values.persistence.downloads.type "pvc" }}
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-downloads-pvc
          {{- else if eq .Values.persistence.downloads.type "nfs" }}
          nfs:
            server: {{ .Values.persistence.downloads.nfs.server }}
            path: {{ .Values.persistence.downloads.nfs.path }}
          {{- else }}
          emptyDir: { }
          {{- end }}
        - name: lidarr-music
          {{- if eq .Values.persistence.music.type "pvc" }}
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-music-pvc
          {{- else if eq .Values.persistence.music.type "nfs" }}
          nfs:
            server: {{ .Values.persistence.music.nfs.server }}
            path: {{ .Values.persistence.music.nfs.path }}
          {{- else }}
          emptyDir: { }
          {{- end }}
